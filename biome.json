{
	"$schema": "https://biomejs.dev/schemas/1.9.3/schema.json",
	"vcs": { "enabled": false, "clientKind": "git", "useIgnoreFile": false },
	"files": { "ignoreUnknown": false, "ignore": [] },
	"formatter": { "enabled": true, "indentStyle": "tab" },
	"organizeImports": { "enabled": true },
	"linter": { "enabled": true, "rules": { "recommended": false } },
	"javascript": {
		"formatter": { "quoteStyle": "double" },
		"globals": [
			"reactive",
			"toRef",
			"EffectScope",
			"ExtractPropTypes",
			"onServerPrefetch",
			"triggerRef",
			"isReadonly",
			"Component",
			"onActivated",
			"toValue",
			"useRoute",
			"onBeforeMount",
			"unref",
			"useLink",
			"ref",
			"shallowRef",
			"watchSyncEffect",
			"provide",
			"useSlots",
			"markRaw",
			"resolveComponent",
			"onBeforeRouteUpdate",
			"h",
			"nextTick",
			"onUpdated",
			"shallowReactive",
			"PropType",
			"inject",
			"useCssVars",
			"isProxy",
			"effectScope",
			"onBeforeUnmount",
			"onRenderTracked",
			"computed",
			"onDeactivated",
			"watchPostEffect",
			"onBeforeUpdate",
			"isRef",
			"onMounted",
			"VNode",
			"readonly",
			"ComponentPublicInstance",
			"useAttrs",
			"ComputedRef",
			"onBeforeRouteLeave",
			"onUnmounted",
			"toRaw",
			"useRouter",
			"Ref",
			"toRefs",
			"InjectionKey",
			"onRenderTriggered",
			"defineComponent",
			"ExtractDefaultPropTypes",
			"createApp",
			"ExtractPublicPropTypes",
			"getCurrentScope",
			"WritableComputedRef",
			"onScopeDispose",
			"shallowReadonly",
			"defineAsyncComponent",
			"watchEffect",
			"watch",
			"getCurrentInstance",
			"onErrorCaptured",
			"useCssModule",
			"customRef",
			"isReactive"
		]
	}
}
